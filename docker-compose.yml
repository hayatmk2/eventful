version: '3.4'

networks:
  frontend:
  backend:

services:
  eventwebmvc:
    build:
      context: .\WebMvc
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CatalogUrl: http://catalog
      IdentityUrl: http://192.168.8.120:5020
      CartUrl: http://cart
      OrderUrl: http://order
    container_name: eventweb
    ports:
      - "5300:80"
    networks:
      - frontend
    depends_on:
      - eventcatalogapi
      - tokenserver
  eventcatalogapi:
    image: event/eventcatalogapi
    build:
      context: .
      dockerfile: EventCatalogAPI/Dockerfile
    environment:
       DatabaseServer: mssqlserver
       DatabaseName: EventCatalogDb
       DatabaseUser: sa
       DatabasePassword: Event123
    container_name: eventcatalogapi
    ports:
      - "5060:80"
    networks:
      - backend
      - frontend
    depends_on:
      - mssqlserver

  mssqlserver:
    image: "microsoft/mssql-server-linux:latest"
    ports:
      - "1440:1433"
    container_name: mssqlcontainer
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: Event123
    networks:
      - backend
  tokenserver:
    build:
      context: .\TokenServiceApi
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development 
      MvcClient: http://localhost:5300  
      BasketApiClient: http://localhost:5051
      OrderApiClient: http://localhost:5601
    container_name: tokenserviceapi2
    ports:
      - "5020:80"   
    networks:
      - backend 
      - frontend
    depends_on:
      - mssqlserver
  
  cart:
    image: cartimage
    build: 
      context: .\CartApi
      dockerfile: Dockerfile
    environment: 
       ASPNETCORE_ENVIRONMENT: Development 
       IdentityUrl: http://tokenserver
    container_name: cartapi
    ports:
      - "5051:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - basket.data
      - tokenserver

  basket.data:
    image: redis
    ports:
      - "6377:6379"  
    networks:
      - backend
      
  order:
    image: event/order
    build: 
      context: .\OrderApi
      dockerfile: Dockerfile  
    environment: 
      ASPNETCORE_ENVIRONMENT: Development 
      IdentityUrl: http://tokenserver
      SQLSERVER_HOST: mssqlcontainer
      SA_PASSWORD: Event123
      DATABASE: EventCatalogdb
      container_name: orderapi
    ports:
      - "5601:80"
    networks:
      - backend
      - frontend 
    depends_on:
      - mssqlserver
      - tokenserver 
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: myrabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
      - "5671:5671"
    volumes:
       - ~/rabbitmq:/var/lib/rabbitmq/mnesia   
    networks:
      - backend 